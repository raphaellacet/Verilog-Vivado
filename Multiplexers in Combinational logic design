`timescale 1ns / 1ps
module mux(
    input [7:0] I,
    input [2:0] S,
    output reg F
    );
    
    always @ (S)
    begin
        case(S)
        0: F = I[0];
        1: F = I[1];
        2: F = I[2];
        3: F = I[3];
        4: F = I[4];
        5: F = I[5];
        6: F = I[6];
        7: F = I[7];
        default: F=0;
    endcase
end
  
endmodule

module mux_sim(
    );
    reg [7:0] I_t;
    reg [2:0] S_t;
    wire F_t;
    integer i;
    integer j;
        
    exp_4 UUT(
        .I(I_t),
        .S(S_t),
        .F(F_t)
        );
       
    initial begin
        I_t = 3'd0;
        S_t = 3'd0;
        for (i=0; i<=256; i=i+1) begin
             for (j=0; j<=8; j=j+1) begin
                 #10 I_t=i;
                 S_t=j;
             end
        end
    end 
              
endmodule
